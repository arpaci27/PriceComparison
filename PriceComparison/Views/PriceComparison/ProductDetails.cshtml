@model List<(string name, string price, string shopImage, string productImage)>

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ürün Detayları</title>
    <style>
        /* Color Palette */
        :root {
            --primary-color: #007bff;
            --accent-color: #4CAF50;
            --text-color: #333;
            --background-color: #fff;
            --secondary-bg: #f7f7f7;
            --shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: var(--secondary-bg);
            color: var(--text-color);
        }

        h1 {
            text-align: center;
            font-size: 2rem;
            color: var(--primary-color);
            margin-bottom: 20px;
        }

        /* Product Containers */
        .product-container {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        /* Main Product Card */
        .product-card.featured {
            display: flex;
            flex-direction: row;
            gap: 20px;
            padding: 20px;
            background: var(--background-color);
            border-radius: 10px;
            border: 2px solid var(--accent-color);
            box-shadow: var(--shadow);
        }

        .product-image1 {
            width: 250px;
            height: 250px;
            border-radius: 10px;
            overflow: hidden;
            background: #eee;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-image1 img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .product-details {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            flex: 1;
        }

        .product-title {
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .product-price {
            font-size: 20px;
            font-weight: bold;
            color: var(--accent-color);
        }

        /* Sub Product Cards */
        .sub-product-card {
            display: flex;
            gap: 15px;
            align-items: center;
            padding: 15px;
            background: var(--background-color);
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: var(--shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .sub-product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 14px rgba(0, 0, 0, 0.2);
        }

        .product-image {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            overflow: hidden;
            background: #eee;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .sub-product-title {
            font-size: 16px;
            font-weight: bold;
            margin: 0;
        }

        .sub-product-price {
            font-size: 16px;
            font-weight: bold;
            color: var(--primary-color);
        }

        .price-badge {
            background: var(--accent-color);
            color: white;
            font-size: 12px;
            font-weight: bold;
            padding: 5px 10px;
            border-radius: 5px;
            display: inline-block;
        }

        /* Loading Overlay */
        #redirect-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            display: none;
            justify-content: center;
            align-items: center;
        }

        .redirect-message {
            font-size: 24px;
            font-weight: bold;
            color: white;
            text-align: center;
            background-color: rgba(0, 0, 0, 0.7);
            padding: 20px 40px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .product-card.featured {
                flex-direction: column;
                align-items: center;
            }

            .product-image1 {
                width: 200px;
                height: 200px;
            }

            .sub-product-card {
                flex-direction: column;
                align-items: center;
                text-align: center;
            }

            .product-image {
                width: 80px;
                height: 80px;
            }
        }
    </style>
</head>

<body>
    <h1>Ürün Detayları</h1>

    <!-- Loading Overlay -->
    <div id="redirect-overlay">
        <div class="redirect-message">
            Redirecting...
        </div>
    </div>

    <!-- Featured Product Section -->
    <div class="product-container">
        @if (Model != null && Model.Any())
        {
            var product = Model.First();
            var cheapestProduct = Model.OrderBy(p => p.price).First(); // Find cheapest product
            <div class="product-card featured">
                <div class="product-image1">
                    <img src="@product.productImage" alt="Ürün Resmi">
                </div>
                <div class="product-details">
                    <h2 class="product-title">@product.name</h2>
                    <p class="product-price">En Ucuz Fiyat: @cheapestProduct.price</p>
                </div>
            </div>
        }
    </div>
    <br />
    <br />

    <!-- Sub Products Section -->
    <div class="product-container">
        @if (Model != null)
        {
            // En düşük fiyatı hesaplama
            var minPrice = Model.Min(p => p.price);

            // Ürünleri döngüye al
            for (int j = 0; j < Model.Count; j++)
            {
                var product = Model[j]; // Döngüdeki eleman
                <div class="sub-product-card">
                    <div class="product-image">
                        <img src="@product.shopImage" alt="Mağaza Logosu">
                    </div>
                    <div class="product-details">
                        <h2 class="sub-product-title">@product.name</h2>
                        <p class="sub-product-price">@product.price</p>
                        @if (product.price == minPrice) // En düşük fiyatlı ürün kontrolü
                        {
                            <span class="price-badge">Cheapest Price</span>
                        }
                    </div>
                    <a asp-controller="PriceComparison"
                       asp-action="GetProductLink"
                       asp-route-j="@j"
                       class="btn btn-primary"
                       onclick="showRedirectOverlay(event, this);">
                        See the Product Page
                    </a>
                </div>
            }
        }
    </div>

    <script>
        function showRedirectOverlay(event, anchor) {
            event.preventDefault(); // Link tıklamasını engelle
            const overlay = document.getElementById('redirect-overlay');
            if (overlay) {
                overlay.style.display = 'flex'; // Overlay'i göster
            }

            setTimeout(() => {
                window.location.href = anchor.href; // Yönlendirme işlemi
            }, 3000); // Örnek: 3 saniye sonra yönlendirme
        }
    </script>

</body>

</html>
